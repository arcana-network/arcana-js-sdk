/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IArcana, IArcanaInterface } from "../IArcana";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setAppName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_client",
        type: "string",
      },
      {
        internalType: "string",
        name: "_clientId",
        type: "string",
      },
    ],
    name: "setClientId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_client",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_clientId",
        type: "string[]",
      },
    ],
    name: "setClientIds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_store",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bandwidth",
        type: "uint256",
      },
    ],
    name: "setDefaultLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "store",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bandwidth",
        type: "uint256",
      },
    ],
    name: "setUserLevelLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IArcana__factory {
  static readonly abi = _abi;
  static createInterface(): IArcanaInterface {
    return new utils.Interface(_abi) as IArcanaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IArcana {
    return new Contract(address, _abi, signerOrProvider) as IArcana;
  }
}
